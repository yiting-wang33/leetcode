/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        
        if (root == null) {
            return result;
        }
        
        Queue<TreeNode> que = new LinkedList<TreeNode>();
        que.offer(root);
        while (!que.isEmpty()) { 
            int size = que.size();
            List<Integer> level = new ArrayList<Integer>();
            
            for (int i = 0;i<size;i++) {
                TreeNode head = que.poll();
                level.add(head.val);
                if (head.left != null) {
                    que.offer(head.left);
                }
                if (head.right != null) {
                    que.offer(head.right);
                }
            }
            result.add(level);
        }
        Collections.reverse(result);
        return result;
    }
}
